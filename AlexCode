---
title: "Oral Health Literacy: Post-test"
author: "Alex Cermak"
date: "2023-03-01"
output: html_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(readxl)
library(kableExtra)
library(scales)
library(nnet)
library(car)
library(lmtest)
```

```{r, message = FALSE}
# read in data and change column names
data <- read_xlsx("posttest.xlsx", skip = 1)
colnames(data) <- c("Student_Num","C1_Q1", "C1_Q2", "C1_Q3", "C1_Q4", "C1_Q5A", "C1_Q5B",
                    "C2_Q1", "C2_Q2", "C2_Q3", "C2_Q4", "C2_Q5", "C2_Q6",
                    "C3_Q1", "C3_Q2","C3_Q3","C3_Q4","C3_Q5",
                    "C4_Q1", "C4_Q2", "C4_Q3", "C4_Q4",
                    "C5_Q1", "C5_Q2", "C5_Q3", "C5_Q4", "C5_Q5", "C5_Q6",
                    "C6_Q1", "C6_Q2", "C6_Q3", "C6_Q4", "C6_Q5", "C6_Q6",
                    "C7_Q1", "C7_Q2", "C7_Q3", "C7_Q4", "C7_Q5", "C7_Q6",
                    "C14C15_Q1", "C14C15_Q2", "C14C15_Q3", "C14C15_Q4",
                    "C14C15_Q5", "C14C15_Q6")

# remove NA columns
data <- data[,-c(47:49)]

# rotate the data longer
data_longer <- pivot_longer(data, cols = -c("Student_Num"),
                            names_to = "Chapter_Question",
                            values_to = "Score")

# create variable for health literacy
data_longer <- data_longer %>%
  mutate(Health_Lit = ifelse(Chapter_Question == "C1_Q1" | Chapter_Question =="C1_Q3" |
                               Chapter_Question =="C2_Q1" | Chapter_Question =="C2_Q4" |
                               Chapter_Question =="C2_Q5" | Chapter_Question =="C2_Q6" | 
                               Chapter_Question =="C3_Q1" | Chapter_Question =="C3_Q4" | 
                               Chapter_Question =="C3_Q5" | Chapter_Question =="C4_Q2" |
                               Chapter_Question =="C4_Q3" | Chapter_Question =="C5_Q6" |
                               Chapter_Question =="C6_Q3" | Chapter_Question =="C6_Q6" | 
                               Chapter_Question =="C7_Q6" |  Chapter_Question =="C14C15_Q2" |
                               Chapter_Question =="C14C15_Q4", "Behavior",
                             ifelse(Chapter_Question == "C1_Q2" | Chapter_Question =="C2_Q3" | 
                                      Chapter_Question =="C3_Q3" | Chapter_Question =="C5_Q3" |
                                      Chapter_Question =="C6_Q1" | Chapter_Question =="C6_Q2" | 
                                      Chapter_Question =="C6_Q4" | Chapter_Question =="C6_Q5", 
                                    "Product",
                                    ifelse(Chapter_Question == "C1_Q5A" | Chapter_Question =="C1_Q5B" | 
                                             Chapter_Question =="C5_Q1" | Chapter_Question =="C5_Q5" | 
                                             Chapter_Question =="C14C15_Q1" | Chapter_Question =="C14C15_Q6",
                                           "Services",
                                           ifelse(Chapter_Question == "C1_Q4" | Chapter_Question =="C2_Q2" |
                                             Chapter_Question =="C3_Q2" | Chapter_Question =="C4_Q1" |
                                               Chapter_Question =="C4_Q4" | Chapter_Question =="C5_Q2" | 
                                               Chapter_Question =="C5_Q4" | Chapter_Question =="C7_Q1" | 
                                               Chapter_Question =="C7_Q2" | Chapter_Question =="C7_Q3" | 
                                               Chapter_Question =="C7_Q4" | Chapter_Question =="C7_Q5" |
                                               Chapter_Question =="C14C15_Q3" | Chapter_Question =="C14C15_Q5",
                                             "Information", NA)))))

data_longer2 <- data_longer %>%
  separate(Chapter_Question, c("Chapter","Question"))

# rearrange chapter order
lvls <- c("C1", "C2", "C3", "C4", "C5", "C6", "C7", "C14C15")
data_longer2 <- data_longer2 %>%
  mutate(Chapter = factor(Chapter, levels = lvls)) %>%
  arrange(Chapter)

# function to calculate the mode
get_mode <- function(x) {
  u <- unique(x)
  tab <- tabulate(match(x,u))
  u[tab == max(tab)]
}

# calculate cumulative statistics for each chapter
cumul_chaptstats <- data_longer2 %>%
  group_by(Chapter) %>%
  summarize(median = median(Score, na.rm = TRUE),
            mean = mean(Score, na.rm = TRUE),
            mode = get_mode(Score))
kable(cumul_chaptstats,
      caption = "Averages of Post-Test Scores by Chapter") %>%
  kable_styling(full_width = FALSE) 

# calculate overall statistics
cumul_scores <- data_longer2 %>%
  summarize(median = median(Score, na.rm = TRUE),
            mean = mean(Score, na.rm = TRUE),
            mode = get_mode(Score))
kable(cumul_scores, 
      caption = "Overall Averages for Post-Test Scores") %>%
  kable_styling(full_width = FALSE)

# count the number of missing scores for each student by chapter
chap_zeros <- data_longer2 %>%
  group_by(Student_Num, Chapter) %>%
  summarize(num_zeros = sum(Score == 0))
```

```{r, message = FALSE}
# counts of answers over all chapters
count_score <- table(data_longer2$Score)
kable(count_score, col.names = c("Score", "Count"),
      caption = "Overall Post-Test Score Counts") %>%
  kable_styling(full_width = FALSE)

# percentages over all chapters
prop_score <- data_longer2 %>%
  group_by(Score) %>%
  summarize(Percent = scales::percent(n()/nrow(.), accuracy = 0.01))
kable(prop_score, caption = "Overal Post-Test Score Percentages") %>%
  kable_styling(full_width = FALSE) 

# counts of student scores by chapter
count_scorechap <- table(data_longer2$Chapter, data_longer2$Score)
row.names(count_scorechap) <- c("Chapter 1", "Chapter 2", "Chapter 3",
                                "Chapter 4", "Chapter 5", "Chapter 6",
                                "Chapter 7", "Chapters 14,15")
kable(count_scorechap, col.names = c("Missing/No Answer",
                                     "Correct Answer, Correct Spelling",
                                     "Correct Answer, Incorrect Spelling",
                                     "Incorrect Answer, Correct Spelling",
                                     "Incorrect Answer, Incorrect Spelling"),
      caption = "Counts of Post-Test Scores by Chapter") %>%
  kable_styling(full_width = FALSE) 

# proportions of scores by chapter
prop_scorechap <- data_longer2 %>%
  select(Chapter, Score) %>%
  group_by(Chapter) %>%
  summarize(Percent_0 = scales::percent(sum(Score == 0)/ length(Score), 
                                        accuracy = 0.01),
            Percent_1 = scales::percent(sum(Score == 1)/ length(Score),
                                        accuracy = 0.01),
            Percent_2 = scales::percent(sum(Score == 2)/ length(Score),
                                        accuracy = 0.01),
            Percent_3 = scales::percent(sum(Score == 3)/ length(Score),
                                        accuracy = 0.01),
            Percent_4 = scales::percent(sum(Score == 4)/ length(Score),
                                        accuracy = 0.01))
kable(prop_scorechap,col.names = c("Chapter","Missing/No Answer",
                                     "Correct Answer, Correct Spelling",
                                     "Correct Answer, Incorrect Spelling",
                                     "Incorrect Answer, Correct Spelling",
                                     "Incorrect Answer, Incorrect Spelling"),
      caption = "Percentages of Post-Test Scores by Chapter") %>%
  kable_styling(full_width = FALSE)

# counts of student score by student
count_stdscore <- table(data_longer2$Student_Num, data_longer2$Score)

# create variable that indicates which students were absent
chap_zeros <- chap_zeros %>%
  group_by(Student_Num, Chapter) %>%
  mutate(Absences = ifelse(Chapter == "C1", ifelse(num_zeros == 6,
                                                   "Absent", "Present"),
                        ifelse(Chapter == "C2", ifelse(num_zeros == 6, 
                                                       "Absent", "Present"),
                            ifelse(Chapter == "C3", ifelse(num_zeros == 5, 
                                                           "Absent", "Present"),
                                ifelse(Chapter == "C4", ifelse(num_zeros == 4, 
                                                               "Absent", "Present"),
                                    ifelse(Chapter == "C5", ifelse(num_zeros == 6, 
                                                                   "Absent", "Present"),
                                        ifelse(Chapter == "C6", ifelse(num_zeros == 6, 
                                                                       "Absent", "Present"),
                                            ifelse(Chapter == "C7", ifelse(num_zeros == 6,
                                                                           "Absent", "Present"),
                                                ifelse(Chapter == "C14C15", ifelse(num_zeros == 6,
                                                                                   "Absent", "Present"),
                                                       NA)))))))))

# get counts from each chapter
chap_zeros_count <- chap_zeros %>%
  group_by(Chapter, Absences) %>%
  summarize(n = n()) %>%
  pivot_wider(names_from = Absences,
              values_from = n)
kable(chap_zeros_count, col.names = c("Chapter", "Absent", "Present"),
      caption = "Counts of Absences by Chapter") %>%
  kable_styling(full_width = FALSE)

# merge absences with data
data_longer2c <- merge(data_longer2, chap_zeros, by = c("Student_Num","Chapter"))
```

```{r}
# assumptions

# model run: health literacy
test <- multinom(Score ~ Health_Lit, data = data_longer2c)
summary(test)

zscore <- summary(test)$coefficients/summary(test)$standard.errors
pvals <- (1-pnorm(abs(zscore), 0, 1))*2
pvals

# model run: health literacy + chapter
test2 <- multinom(Score ~ Health_Lit + Chapter, data = data_longer2c)
summary(test)

zscore2 <- summary(test2)$coefficients/summary(test2)$standard.errors
pvals2 <- (1-pnorm(abs(zscore2), 0, 1))*2
pvals2

# model run: full model
full_test <- multinom(Score ~ Health_Lit + Chapter + Absences, data = data_longer2c)
summary(full_test)

zscore_full <- summary(full_test)$coefficients/summary(full_test)$standard.errors
pvals_full <- (1-pnorm(abs(zscore_full), 0, 1))*2
pvals_full
```

```{r}
# likelihood ratio tests
lrtest(test2,test)

lrtest(full_test, test2)
```


```{r}
# split data in two based on spelling and correct answer, with missing scores omitted
data_longer3 <- data_longer2c %>%
  mutate(Correct_Ans = ifelse(Score == 1, 1,
                              ifelse(Score == 2, 1,
                                     ifelse(Score == 3, 0,
                                            ifelse(Score == 4, 0,
                                                   ifelse(Score == 0, 0, NA))))),
         Correct_Spell = ifelse(Score == 1, 1,
                                ifelse(Score == 2, 0,
                                       ifelse(Score == 3, 1,
                                              ifelse(Score == 4, 0,
                                                     ifelse(Score == 0, 0, NA))))))

# logistic regressions on correctness and spelling separately
test_correctans <- glm(Correct_Ans ~ Health_Lit + Chapter + Absences, family = "binomial", data = data_longer3)
summary(test_correctans)

test_correctspell <- glm(Correct_Spell~ Health_Lit + Chapter + Absences, family = "binomial", data = data_longer3)
summary(test_correctspell)
```



